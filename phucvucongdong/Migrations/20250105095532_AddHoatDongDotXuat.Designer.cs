// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using phucvucongdong.Data;

#nullable disable

namespace phucvucongdong.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250105095532_AddHoatDongDotXuat")]
    partial class AddHoatDongDotXuat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("phucvucongdong.Entities.DangKyGiaoVien", b =>
                {
                    b.Property<int>("GiaoVienId")
                        .HasColumnType("int");

                    b.Property<int>("HoatDongId")
                        .HasColumnType("int");

                    b.Property<int>("NamHoc")
                        .HasColumnType("int");

                    b.Property<int?>("Diem")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GiaoVienId", "HoatDongId", "NamHoc");

                    b.HasIndex("HoatDongId");

                    b.ToTable("DangKyGiaoVien", null, t =>
                        {
                            t.HasCheckConstraint("CK_DangKyGiaoVien_TrangThai", "[TrangThai] IN ('0', '1', '2')");
                        });
                });

            modelBuilder.Entity("phucvucongdong.Entities.DanhMucPVCongDong", b =>
                {
                    b.Property<int>("DanhMucId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DanhMucId"));

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DanhMucId");

                    b.ToTable("DanhMucPVCongDong");
                });

            modelBuilder.Entity("phucvucongdong.Entities.GiaoVien", b =>
                {
                    b.Property<int>("GiaoVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiaoVienId"));

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NguoiDungId")
                        .HasColumnType("int");

                    b.HasKey("GiaoVienId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("GiaoVien");
                });

            modelBuilder.Entity("phucvucongdong.Entities.HoatDong", b =>
                {
                    b.Property<int>("HoatDongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoatDongId"));

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenHoatDong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TieuChiId")
                        .HasColumnType("int");

                    b.HasKey("HoatDongId");

                    b.HasIndex("TieuChiId");

                    b.ToTable("HoatDong");
                });

            modelBuilder.Entity("phucvucongdong.Entities.HoatDongDotXuat", b =>
                {
                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("TenHoatDong")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<int>("NamHoc")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("HocKy")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<string>("MinhChung")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NguoiDungId", "TenHoatDong", "NamHoc", "HocKy");

                    b.ToTable("HoatDongDotXuat", null, t =>
                        {
                            t.HasCheckConstraint("CK_HoatDongDotXuat_HocKy", "[HocKy] >= 1 AND [HocKy] <= 2");
                        });
                });

            modelBuilder.Entity("phucvucongdong.Entities.NguoiDung", b =>
                {
                    b.Property<int>("NguoiDungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NguoiDungId"));

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhongBan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ThongTinLienHe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NguoiDungId");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("phucvucongdong.Entities.SinhVien", b =>
                {
                    b.Property<int>("SinhVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SinhVienId"));

                    b.Property<string>("Lop")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nganh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NguoiDungId")
                        .HasColumnType("int");

                    b.HasKey("SinhVienId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("SinhVien");
                });

            modelBuilder.Entity("phucvucongdong.Entities.ThamGiaSinhVien", b =>
                {
                    b.Property<int>("SinhVienId")
                        .HasColumnType("int");

                    b.Property<int>("HoatDongId")
                        .HasColumnType("int");

                    b.Property<string>("MinhChung")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SinhVienId", "HoatDongId");

                    b.HasIndex("HoatDongId");

                    b.ToTable("ThamGiaSinhVien");
                });

            modelBuilder.Entity("phucvucongdong.Entities.TieuChi", b =>
                {
                    b.Property<int>("TieuChiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TieuChiId"));

                    b.Property<int?>("DanhMucId")
                        .HasColumnType("int");

                    b.Property<int?>("Diem")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenTieuChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TieuChiId");

                    b.HasIndex("DanhMucId");

                    b.ToTable("TieuChi", null, t =>
                        {
                            t.HasCheckConstraint("CK_TieuChi_Diem", "[Diem] >= 0");
                        });
                });

            modelBuilder.Entity("phucvucongdong.Entities.DangKyGiaoVien", b =>
                {
                    b.HasOne("phucvucongdong.Entities.GiaoVien", "GiaoVien")
                        .WithMany("DangKyGiaoViens")
                        .HasForeignKey("GiaoVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("phucvucongdong.Entities.HoatDong", "HoatDong")
                        .WithMany("DangKyGiaoViens")
                        .HasForeignKey("HoatDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiaoVien");

                    b.Navigation("HoatDong");
                });

            modelBuilder.Entity("phucvucongdong.Entities.GiaoVien", b =>
                {
                    b.HasOne("phucvucongdong.Entities.NguoiDung", "NguoiDung")
                        .WithMany("GiaoViens")
                        .HasForeignKey("NguoiDungId");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("phucvucongdong.Entities.HoatDong", b =>
                {
                    b.HasOne("phucvucongdong.Entities.TieuChi", "TieuChi")
                        .WithMany("HoatDongs")
                        .HasForeignKey("TieuChiId");

                    b.Navigation("TieuChi");
                });

            modelBuilder.Entity("phucvucongdong.Entities.HoatDongDotXuat", b =>
                {
                    b.HasOne("phucvucongdong.Entities.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("phucvucongdong.Entities.SinhVien", b =>
                {
                    b.HasOne("phucvucongdong.Entities.NguoiDung", "NguoiDung")
                        .WithMany("SinhViens")
                        .HasForeignKey("NguoiDungId");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("phucvucongdong.Entities.ThamGiaSinhVien", b =>
                {
                    b.HasOne("phucvucongdong.Entities.HoatDong", "HoatDong")
                        .WithMany("ThamGiaSinhViens")
                        .HasForeignKey("HoatDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("phucvucongdong.Entities.SinhVien", "SinhVien")
                        .WithMany("ThamGiaSinhViens")
                        .HasForeignKey("SinhVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoatDong");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("phucvucongdong.Entities.TieuChi", b =>
                {
                    b.HasOne("phucvucongdong.Entities.DanhMucPVCongDong", "DanhMucPVCongDong")
                        .WithMany("TieuChis")
                        .HasForeignKey("DanhMucId");

                    b.Navigation("DanhMucPVCongDong");
                });

            modelBuilder.Entity("phucvucongdong.Entities.DanhMucPVCongDong", b =>
                {
                    b.Navigation("TieuChis");
                });

            modelBuilder.Entity("phucvucongdong.Entities.GiaoVien", b =>
                {
                    b.Navigation("DangKyGiaoViens");
                });

            modelBuilder.Entity("phucvucongdong.Entities.HoatDong", b =>
                {
                    b.Navigation("DangKyGiaoViens");

                    b.Navigation("ThamGiaSinhViens");
                });

            modelBuilder.Entity("phucvucongdong.Entities.NguoiDung", b =>
                {
                    b.Navigation("GiaoViens");

                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("phucvucongdong.Entities.SinhVien", b =>
                {
                    b.Navigation("ThamGiaSinhViens");
                });

            modelBuilder.Entity("phucvucongdong.Entities.TieuChi", b =>
                {
                    b.Navigation("HoatDongs");
                });
#pragma warning restore 612, 618
        }
    }
}
